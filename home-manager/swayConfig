# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left n
set $down e
set $up i
set $right o
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
set $menu rofi

### Output configuration
#
# Default wallpaper (more resolutions are available in /run/current-system/sw/share/backgrounds/sway/)
output * bg  ~/.config/sway/white.jpg fill

#
# Example configuration:
#
# output HDMI-A-1 resolution 1920x1080 position 1920,0
output *  transform 0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#

         # timeout 600 'swaylock -f -c 000000' \
         before-sleep 'swaylock -f -c 000000'

exec swayidle -w \
         timeout 2400 'systemctl hybrid-sleep' 
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#bindsym Print exec grim ~/save/media/recordings/pic/Screenshot-$(date +%F-%T).png && dunstify "Full-screen screenshot taken" -t 1000

bindsym Print exec grim -g "$(slurp)" - | wl-copy && wl-paste > ~/save/media/recordings/pic/Screenshot-$(date +%F%T).png | dunstify "Screenshot of the region taken" -t 1000
bindsym Shift+Print exec grim -g "$(slurp -o -r -c '#ff0000ff')" -t ppm - | satty --filename - --fullscreen --output-filename ~/save/media/recording/pic/satty-$(date '+%Y%m%d-%H:%M:%S').png
bindsym Mod1+Shift+Print exec wf-recorder

bindsym $mod+p exec swaylock -i /home/leeao/config/home-manager/takeabreak.png

exec wl-gammarelay-rs &
#exec fcitx5 -d --replace &
exec wl-paste --type text --watch cliphist store &
exec swaymsg workspace number 5

bindsym $mod+Mod1+e exec emacsclient -c -a 'emacs'

for_window [app_id="emacs"] border none
for_window [app_id="emacs"] titlebar_padding 0
for_window [app_id="emacs"] titlebar_border_thickness 0


for_window [app_id="foot"] border none
for_window [app_id="foot"] titlebar_padding 0
for_window [app_id="foot"] titlebar_border_thickness 0


for_window [app_id="firefox"] border none
for_window [app_id="firefox"] titlebar_padding 0
for_window [app_id="firefox"] titlebar_border_thickness 0



### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

bindsym $mod+Mod1+1 exec paperlike-cli -i2c /dev/i2c-4 -contrast 1
bindsym $mod+Mod1+2 exec paperlike-cli -i2c /dev/i2c-4 -contrast 2
bindsym $mod+Mod1+3 exec paperlike-cli -i2c /dev/i2c-4 -contrast 3
bindsym $mod+Mod1+4 exec paperlike-cli -i2c /dev/i2c-4 -contrast 4
bindsym $mod+Mod1+5 exec paperlike-cli -i2c /dev/i2c-4 -contrast 5
bindsym $mod+Mod1+6 exec paperlike-cli -i2c /dev/i2c-4 -contrast 6
bindsym $mod+Mod1+7 exec paperlike-cli -i2c /dev/i2c-4 -contrast 7
bindsym $mod+Mod1+8 exec paperlike-cli -i2c /dev/i2c-4 -contrast 8
bindsym $mod+Mod1+9 exec paperlike-cli -i2c /dev/i2c-4 -contrast 9
bindsym $mod+Control+1 exec paperlike-cli -i2c /dev/i2c-4 -mode 1
bindsym $mod+Control+2 exec paperlike-cli -i2c /dev/i2c-4 -mode 2
bindsym $mod+Control+3 exec paperlike-cli -i2c /dev/i2c-4 -mode 3
bindsym $mod+Control+4 exec paperlike-cli -i2c /dev/i2c-4 -mode 4
bindsym $mod+Control+5 exec paperlike-cli -i2c /dev/i2c-4 -speed 1
bindsym $mod+Control+6 exec paperlike-cli -i2c /dev/i2c-4 -speed 2
bindsym $mod+Control+7 exec paperlike-cli -i2c /dev/i2c-4 -speed 3
bindsym $mod+Control+8 exec paperlike-cli -i2c /dev/i2c-4 -speed 4
bindsym $mod+Control+9 exec paperlike-cli -i2c /dev/i2c-4 -speed 5
bindsym $mod+d exec paperlike-cli -i2c /dev/i2c-4 -clear


#bindsym Mod1+Tab exec rofi -modes window -show window
bindsym $mod+Tab exec bash -c "swaymsg fullscreen; swaymsg focus down; swaymsg fullscreen;"

#bindsym $mod+tab workspace next_on_output 
#bindsym $mod+Shift+tab workspace prev_on_output 


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+z exec woomer

    # Kill focused window
    bindsym $mod+Shift+w kill

    bindsym $mod+Shift+r workspace back_and_forth
    bindsym $mod+r exec toggle-workspace
    bindsym $mod+y exec busctl --user set-property rs.wl-gammarelay / rs.wl.gammarelay Brightness d 0
    bindsym $mod+Shift+y exec busctl --user set-property rs.wl-gammarelay / rs.wl.gammarelay Brightness d 1

    # Start your launcher
    bindsym $mod+w exec $menu -show drun
    bindsym $mod+c exec cliphist list | $menu -dmenu| cliphist decode | wl-copy
    bindsym $mod+q exec sendspeech
    bindsym $mod+Shift+h exec systemctl hybrid-sleep
    bindsym $mod+Shift+d exec cliphist list | rofi -dmenu| cliphist delete

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+h layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+x mode "resize"

#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    seat * hide_cursor 1000

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.


gaps top 0
gaps outer 0
gaps inner 0
bar {
    position bottom
    tray_output none

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while true; do date +'%H:%M'; sleep 1; done


    mode hide
    swaybar_command true
    colors {
        background #ffffff
        statusline #000000
        separator  #000000

        focused_background #ffffff
        focused_statusline #000000
        focused_separator  #000000

        focused_workspace  #ffffff #ffffff #000000
        active_workspace   #ffffff #ffffff #000000
        inactive_workspace #ffffff #000000 #ffffff
        urgent_workspace   #ffffff #ffffff #000000
        binding_mode       #ffffff #ffffff #000000
    }
}
bindsym $mod+shift+b exec swaymsg bar mode toggle

# Focused window: white background, white border, black text.
client.focused           #ffffff  #ffffff  #000000  #ffffff  #ffffff

# Focused inactive: a window within a container that isn’t directly focused.
client.focused_inactive  #ffffff  #000000  #ffffff  #ffffff  #ffffff

# Focused tab title: the title bar of a container that holds a focused window.
client.focused_tab_title #ffffff  #ffffff  #000000

# Unfocused window: black background, white border, white text.
client.unfocused         #ffffff  #000000  #ffffff  #ffffff  #ffffff

# Urgent and placeholder states – set to match the focused style.
client.urgent            #ffffff  #ffffff  #000000  #ffffff  #ffffff
client.placeholder       #ffffff  #ffffff  #000000  #ffffff  #ffffff

# Global background (if applicable) set to pure white.
client.background        #ffffff


# default_border none
# default_floating_border none
font pango:Bookerly 14
titlebar_padding 1
titlebar_border_thickness 0


include /etc/sway/config.d/*
